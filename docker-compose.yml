services:
  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
      args:
        MYSQL_VERSION: ${BUILD_MYSQL_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    ports:
      - "${MYSQL_PORT}:3306"
    container_name: my-mysql-container

  mongo:
    build:
      context: .
      dockerfile: ./docker/mongo/Dockerfile
      args:
        MONGO_VERSION: ${BUILD_MONGO_VERSION}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - backend
    ports:
      - "${MONGO_PORT}:27017"
    container_name: my-mongo-container

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        PHP_VERSION: ${BUILD_PHP_VERSION}
    environment:
      PHP_PORT: ${PHP_PORT}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      # Ajoutez d'autres variables d'environnement nécessaires ici
    volumes:
      - ./src:/var/www/html/src
      - ./public:/var/www/html/public 
      - ./.env:/var/www/html/.env #uniquement pour le developpement 
    networks:
      - backend
    container_name: my-php-container

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        NODE_VERSION: ${BUILD_NODE_VERSION}
    volumes:
      - ./public:/app/public
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - node_modules:/app/node_modules  # Volume nommé pour node_modules
    ports:
      - "${VITE_HOST_PORT}:5173"  # Mapper le port interne 5173 (Vite) au port externe 5172
    environment:
      - CHOKIDAR_USEPOLLING=true
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      # Ajoutez d'autres variables d'environnement nécessaires ici
    networks:
      - frontend
    container_name: my-node-container
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        NGINX_VERSION: ${BUILD_NGINX_VERSION}
    environment:
      - APP_ENV=developpement
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./src/Views:/var/www/html/src/Views
      - ./public:/var/www/html/public
    depends_on:
      - php
      - node
    networks:
      - backend
      - frontend
    container_name: my-nginx-container

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      # PMA_USER: root
      # PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - backend
    container_name: my-phpmyadmin-container

networks:
  backend:
    name: arcadia_backend_network
  frontend:
    name: arcadia_frontend_network

volumes:
  mysql_data:
    name: arcadia_db_data
  mongo_data:
    name: arcadia_mongo_data
  node_modules:
    name: arcadia_node_modules
