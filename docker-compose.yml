services:
  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
      args:
        MYSQL_VERSION: ${MYSQL_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend
    ports:
      - "${MYSQL_PORT}:3306"
    container_name: my-mysql-container

  mongo:
    build:
      context: .
      dockerfile: ./docker/mongo/Dockerfile
      args:
        MONGO_VERSION: ${MONGO_VERSION}
    volumes:
      - mongo_data:/data/db
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - backend
    container_name: my-mongo-container

  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
      args:
        NGINX_VERSION: ${NGINX_VERSION}
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./src/Views:/var/www/html/src/Views
      - ./public:/var/www/html/public
    depends_on:
      - php
    networks:
      - backend
      - frontend
    container_name: my-nginx-container

  php:
    build:
      context: .
      dockerfile:  ./docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-8.0-fpm-alpine}  
    environment:
        PHP_PORT: ${PHP_PORT:-9000}  # Valeur par défaut pour le port PHP_FPM
    volumes:
      - ./src:/var/www/html/src
      - ./public:/var/www/html/public
    networks:
      - backend
    container_name: my-php-container

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION:-16-alpine}   # Passer la version de Node.js au ytravers du fchier .env.dev.
    volumes:
    - ./public:/app/public
    - ./src:/app/src
    - ./package.json:/app/package.json
    - ./package-lock.json:/app/package-lock.json
    - ./node_modules:/app/node_modules  # Volume nommé pour node_modules
    ports:
      # - "${NODE_PORT:-3000}:3000"  test pour essayer de debug en laissant uniquement le port de vite
      - "${VITE_PORT:-5173}:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - frontend
    container_name: my-node-container
    command: ["npm", "run", "dev"]  # Utilise le script "dev"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
      # PMA_USER: root
      # PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - backend
    container_name: my-phpmyadmin-container

networks:
  backend:
    name: arcadia_backend_network
  frontend:
    name: arcadia_frontend_network
volumes:
  mysql_data:
    name: arcadia_db_data
  mongo_data:
    name : arcadia_mongo_data
  node_modules:
    name: arcadia_node_modules
